apply plugin: 'java'
apply plugin: 'application'


sourceCompatibility = JavaVersion.current()
targetCompatibility = JavaVersion.current()

repositories {
    jcenter()
}

dependencies {
    compile 'com.google.guava:guava:21.0'  
    testCompile 'junit:junit:4.12'         
}

mainClassName = 'Main'

jar {
    manifest.attributes("Main-Class": mainClassName);
}

task setWrapper(type: Wrapper) {
    description "Task generates gradle wrapper"
    gradleVersion = "2.0"
}

task createJar(type: Jar, dependsOn: compileJava) {
    description "Task generates JAR executable from .class products"

    manifest {
        attributes "Main-Class": mainClassName
    }

    archiveName = 'AvlTree.jar'
    destinationDir = file("${buildDir}/jars")
    from sourceSets.main.output
}

task execApp(type: JavaExec, dependsOn: classes) {
    description "Task executes application using .class products"

    main = 'Main'
    classpath sourceSets.main.output.classesDir
    classpath configurations.runtime
}

task packZip(type: Zip, dependsOn: createJar) {
    description "Task generates ZIP archieve with classes, jars and libs"

    from (configurations.compile) {
        into ('libs/')
    }
    from (sourceSets.main.output.classesDir) {
        into ('classes/')
    }
    from (sourceSets.main.resources) {
        into ('classes/')
    }
    from ("${buildDir}/jars") {
        into ('jars/')
    }
}

// To produce console output of test results
test {
    afterTest { desc, result -> 
        logger.quiet "Executing test ${desc.name} [${desc.className}] with result: ${result.resultType}"
    }
}
